package laba4n11;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MovingTextSwing extends JFrame implements ActionListener {
	private static final long serialVersionUID = 1L;
	
	private String[] texts = { "My name is Kirill!", "OOP", "Cool subject", "I love Russia", "Gazprom" };
	private MovingText[] movingTexts;
	private Timer timer;
	private int fontSize = 24; 

	public MovingTextSwing() {
		int numOfTexts = texts.length;
		movingTexts = new MovingText[numOfTexts];

		for (int i = 0; i < numOfTexts; i++) {
			movingTexts[i] = new MovingText(texts[i]);
		}

		timer = new Timer(50, this);
		timer.start();

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(400, 300);
		setVisible(true);
	}

	public void actionPerformed(ActionEvent e) {
		for (MovingText movingText : movingTexts) {
			movingText.move();
		}
		repaint();
	}

	public void paint(Graphics g) {
		super.paint(g);

		for (MovingText movingText : movingTexts) {
			movingText.draw(g, fontSize);
		}
	}

	private class MovingText {
		private String text;
		private int x, y;
		private int speed = 10;
		private int xDirection, yDirection;

		public MovingText(String text) {
			this.text = text;
			this.x = (int) (Math.random() * getWidth());
			this.y = (int) (Math.random() * getHeight());
			setRandomDirection();
		}

		private void setRandomDirection() {
			xDirection = (Math.random() > 0.5) ? 1 : -1;
			yDirection = (Math.random() > 0.5) ? 1 : -1;
		}

		public void move() {
			int nextX = x + speed * xDirection;
			int nextY = y + speed * yDirection;

			if (nextX > getWidth() || nextX < 0) {
				setRandomDirection();
			} else {
				x = nextX;
			}

			if (nextY > getHeight() || nextY < 0) {
				setRandomDirection();
			} else {
				y = nextY;
			}
		}

		public void draw(Graphics g, int fontSize) {
			g.setColor(Color.BLUE);

			Font font = g.getFont().deriveFont((float) fontSize);
			g.setFont(font);

			g.drawString(text, x, y);
		}
	}

	public static void main(String[] args) {
		SwingUtilities.invokeLater(() -> new MovingTextSwing());
	}
}
